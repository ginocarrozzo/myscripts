(custom-set-variables
  ;; custom-set-variables was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(after-save-hook (quote (executable-make-buffer-file-executable-if-script-p)))
 '(c-basic-offset 8)
 '(c-comment-continuation-stars "* ")
 '(c-echo-syntactic-information-p t)
 '(c-indent-comments-syntactically-p t)
 '(c-strict-syntax-p t)
 '(c-tab-always-indent t)
 '(case-fold-search t)
 '(compilation-scroll-output t)
 '(display-time-24hr-format t)
 '(display-time-mode t nil (time))
 '(inhibit-startup-screen t)
 '(standard-indent 8))
(custom-set-faces
  ;; custom-set-faces was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 )


;;;;;; Inizio aggiunte mie...
(set-default-font "-adobe-courier-medium-r-normal--12-*-*-*-*-*-*-*")

(defun shapemyfont () "Sets the default font" (interactive)
  (set-default-font "-adobe-courier-medium-r-normal--12-*-*-*-*-*-*-*")
  )

(global-set-key "\M-f" 'shapemyfont)

;; Emacs o XEmacs ?
(defvar running-xemacs (string-match "XEmacs\\|Lucid" emacs-version))

;; non dossier elisp
(add-to-list 'load-path "~/lcl_elisp/")

;; Mettiamo il font-lock globale per Emacs
(cond ((not running-xemacs)
       (global-font-lock-mode t)
))


;; Scroll una riga alla volta
(setq scroll-step 1)
(setq scroll-conservatively 1000)

;; In C i case di uno switch indentati a dovere
(c-set-offset 'case-label '+)

;; Indentatura del c-mode
(c-set-offset 'case-label ' +)
(c-set-offset 'brace-list-intro ' +)
(c-set-offset 'defun-open ' 0)
(c-set-offset 'defun-block-intro ' +)
(c-set-offset 'substatement ' +)
(c-set-offset 'substatement-open ' +)
(c-set-offset 'statement-block-intro ' +)
(c-set-offset 'statement-case-intro ' +)
(c-set-offset 'statement-case-open ' +)
(setq default-tab-width 8)

;; Mostra la chiusura delle parentesi
(show-paren-mode 1)

;; Il nome delle finestre eredita il nome del buffer
(setq frame-title-format "%b")

;; Mostra il numero di colonna
(setq column-number-mode 1)

;; E chi se lo ricorda
(transient-mark-mode t)

;; Abilita-disabilita toolbar
(tool-bar-mode nil)

;; Abilita-disabilita menu
;;(menu-bar-mode nil)

;; Abilita-disabilita tooltip
(tooltip-mode nil)

;; "home" e "end" mappati
(global-set-key (kbd "<home>") 'beginning-of-buffer)
(global-set-key (kbd "<end>") 'end-of-buffer)

;; "goto" mappato
(global-set-key "\M-g" 'goto-line)

;; La rotella... del topo
;;(if (not running-xemacs)
;;    (require 'mwheel) ; Emacs
;;  (mwheel-install) ; XEmacs
;;)
(mouse-wheel-mode 1)

;; Per avere l'auto-header
(defun headerize () "Adds the #define HEADER_H etc." (interactive)
  (let ((flag-name (replace-regexp-in-string "\\." "_" (upcase (buffer-name)))))
    (beginning-of-buffer)
    (insert (concat "#ifndef "   flag-name "\n"))
    (insert (concat "#define "   flag-name "\n"))
    (insert "\n")
    (end-of-buffer)
    (insert "\n")
    (insert (concat "#endif /* " flag-name "*/\n"))
    )
  )

;; Una bella riga verde sulla linea corrente
(global-hl-line-mode t)
;(global-hl-line-mode nil)

;; Termina il file con una newline
(setq require-final-newline t)

;; Non termina il file con una newline
;; ovvero: Stop at the end of the file, not just add lines
;;(setq next-line-add-newlines nil)

;;PERSONAL_GILLO
;;; Enable diplaying Characters encoded with ISO 8859 (range 160-255)
;;(standard-display-european t)

;;; TABS removing
(setq indent-tabs-mode nil)
;;; enable word wrap
(setq default-major-mode 'text-mode)
(setq-default fill-column 80)
(add-hook 'text-mode-hook 'turn-on-auto-fill)

(set-foreground-color "black")
(set-background-color "snow2")

(setq default-frame-alist
      '(
        (background-color . "snow2")
        (foreground-color . "black")
        ))

(global-set-key "\M-g" 'goto-line)

(global-set-key "\M-o" 'whitespace-cleanup)


;;
;; highlight trailing whitespaces
;;
;;(whitespace-global-mode 1)

(require 'show-wspace) ;
(show-ws-toggle-show-hard-spaces)
(show-ws-toggle-show-tabs)
(show-ws-toggle-show-trailing-whitespace)

;; highlight mode
;;(highlight-changes-mode on)

;; IDL stuff
(setq auto-mode-alist (cons '("\\.idl\\'" . idl-mode) auto-mode-alist))
(require 'idl-font-lock)
;
;; psvn
;;;;;(setq svn-status-prefix-key '[(hyper s)])
;;(require 'psvn)
;;;;;(define-key svn-log-edit-mode-map [f6] 'svn-log-edit-svn-diff)

;;(setq desktop-save-mode t)

;;;;;; Fine aggiunte mie
